// +build !ignore_autogenerated

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.NodeOverlayIp":       schema_pkg_apis_iks_v1alpha1_NodeOverlayIp(ref),
		"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.NodeOverlayIpSpec":   schema_pkg_apis_iks_v1alpha1_NodeOverlayIpSpec(ref),
		"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.NodeOverlayIpStatus": schema_pkg_apis_iks_v1alpha1_NodeOverlayIpStatus(ref),
		"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRoute":         schema_pkg_apis_iks_v1alpha1_StaticRoute(ref),
		"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteSpec":     schema_pkg_apis_iks_v1alpha1_StaticRouteSpec(ref),
		"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteStatus":   schema_pkg_apis_iks_v1alpha1_StaticRouteStatus(ref),
	}
}

func schema_pkg_apis_iks_v1alpha1_NodeOverlayIp(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NodeOverlayIp is the Schema for the nodeoverlayips API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.NodeOverlayIpSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.NodeOverlayIpStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.NodeOverlayIpSpec", "github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.NodeOverlayIpStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_iks_v1alpha1_NodeOverlayIpSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NodeOverlayIpSpec defines the desired state of NodeOverlayIp",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_iks_v1alpha1_NodeOverlayIpStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NodeOverlayIpStatus defines the observed state of NodeOverlayIp",
				Properties: map[string]spec.Schema{
					"ipAddr": {
						SchemaProps: spec.SchemaProps{
							Description: "IpAddr reserved in IPAM to configure on the node",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"gateway": {
						SchemaProps: spec.SchemaProps{
							Description: "Gateway the gateway IP address of the network (optional)",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"interface": {
						SchemaProps: spec.SchemaProps{
							Description: "Interface the interface to put the IP address on",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"interfaceLabel": {
						SchemaProps: spec.SchemaProps{
							Description: "InterfaceLabel the name of the overlay interface",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_iks_v1alpha1_StaticRoute(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "StaticRoute is the Schema for the staticroutes API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteSpec", "github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_iks_v1alpha1_StaticRouteSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "StaticRouteSpec defines the desired state of StaticRoute",
				Properties: map[string]spec.Schema{
					"subnet": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gateway": {
						SchemaProps: spec.SchemaProps{
							Description: "Gateway the gateway the subnet is routed through (optional, discovered if not set)",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
				Required: []string{"subnet"},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_iks_v1alpha1_StaticRouteStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "StaticRouteStatus defines the observed state of StaticRoute",
				Properties: map[string]spec.Schema{
					"nodeStatus": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteNodeStatus"),
									},
								},
							},
						},
					},
				},
				Required: []string{"nodeStatus"},
			},
		},
		Dependencies: []string{
			"github.com/jkwong888/iks-overlay-ip-controller/pkg/apis/iks/v1alpha1.StaticRouteNodeStatus"},
	}
}
